load("//third_party/com_github_robotlocomotion_drake:tools/workspace/cpplint.bzl", "cpplint")
load("//third_party/com_github_robotlocomotion_drake:tools/workspace/python_lint.bzl", "python_lint")
load(
    "//tools:dreal.bzl",
    "dreal_cc_googletest",
    "dreal_cc_library",
)
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

package(default_visibility = ["//visibility:private"])

dreal_cc_library(
    name = "prefix_printer",
    srcs = [
        "prefix_printer.cc",
    ],
    hdrs = [
        "prefix_printer.h",
    ],
    visibility = [
        "//:__pkg__",
        "//dreal:__subpackages__",
    ],
    deps = [
        ":symbolic",
    ],
)

dreal_cc_library(
    name = "symbolic",
    srcs = [
        "symbolic.cc",
    ],
    hdrs = [
        "symbolic.h",
    ],
    visibility = [
        "//:__pkg__",
        "//dreal:__subpackages__",
    ],
    deps = [
        "//dreal/util:assert",
        "//dreal/util:exception",
        "//dreal/util:logging",
        "//third_party/com_github_robotlocomotion_drake:drake_symbolic",
    ],
)

dreal_cc_library(
    name = "symbolic_test_util",
    testonly = 1,
    hdrs = [
        "symbolic_test_util.h",
    ],
    visibility = [
        "//dreal/util:__pkg__",
    ],
    deps = [
        ":symbolic",
    ],
)

dreal_cc_googletest(
    name = "prefix_printer_test",
    tags = ["unit"],
    deps = [
        ":prefix_printer",
    ],
)

dreal_cc_googletest(
    name = "symbolic_test",
    tags = ["unit"],
    deps = [
        ":symbolic",
        ":symbolic_test_util",
    ],
)

# ----------------------
# Header files to expose
# ----------------------
filegroup(
    name = "headers",
    srcs = [
        "prefix_printer.h",
        "symbolic.h",
        "//third_party/com_github_robotlocomotion_drake:symbolic_headers",
    ],
    visibility = ["//:__pkg__"],
)

pkg_tar(
    name = "package_headers",
    srcs = [
        ":headers",
    ],
    extension = "tar.gz",
    package_dir = "include/dreal/symbolic",
    tags = ["manual"],
    visibility = ["//:__pkg__"],
)

cpplint()

python_lint()

licenses(["notice"])  # Apache 2.0

exports_files(["LICENSE"])
